<?xml version="1.0" encoding="UTF-8"?>
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:ev="http://www.w3.org/2001/xml-events"
      xmlns:xsd="http://www.w3.org/2001/XMLSchema"
      xmlns:xf="http://www.w3.org/2002/xforms"
      xmlns:ts="http://www.w3c.org/MarkUp/Forms/XForms/Test/11"
      xmlns:bf="http://betterform.sourceforge.net/xforms">
<head>
    <title>XForms Test Suite</title>

    <xf:model id="chapterModel" functions="bf:appContext">
        <!--
                <xf:instance id="instance_chapterModel"   >
                    <data xmlns="http://www.w3c.org/MarkUp/Forms/XForms/Test/11"/>
                </xf:instance>
        -->
        <xf:instance id="instance_chapterModel"
                     src="{$webapp.realpath}../../../src/test/resources/XFormsTestSuite1.1E1/Edition1/driverPages/Results/XF11_Empty_Results.xml"/>
        <!--<xf:instance id="instance_chapterModel">-->
        <!--<data xmlns:ts="http://www.w3c.org/MarkUp/Forms/XForms/Test/11"/>-->
        <!--</xf:instance>-->
        <xf:bind nodeset="/ts:testSuite/ts:specChapter/ts:profile/ts:normativeOnly" type="boolean"/>
        <xf:bind nodeset="/ts:testSuite/ts:specChapter/ts:profile/ts:basicOnly" type="boolean"/>

        <xf:bind nodeset="/ts:testSuite/ts:specChapter/ts:testCase/ts:testCaseDate" type="date"/>
        <xf:bind nodeset="/ts:testSuite/ts:specChapter/ts:testCase/ts:testCaseBasic"/>
        <xf:bind nodeset="/ts:testSuite/ts:specChapter/ts:testCase/ts:testCaseNormative"/>

        <xf:bind nodeset="/ts:testSuite/ts:specChapter/ts:statusSummary/ts:numNormTotal"
                 calculate="count(/ts:testSuite/ts:specChapter/ts:testCase[ts:testCaseNormative = 'true'])"/>
        <xf:bind nodeset="/ts:testSuite/ts:specChapter/ts:statusSummary/ts:numNormPass"
                 calculate="count(/ts:testSuite/ts:specChapter/ts:testCase[ts:testCaseNormative = 'true'][ts:testCaseStatus = 'Passed'])"/>
        <xf:bind nodeset="/ts:testSuite/ts:specChapter/ts:statusSummary/ts:numNormFail"
                 calculate="count(/ts:testSuite/ts:specChapter/ts:testCase[ts:testCaseNormative = 'true'][ts:testCaseStatus = 'Failed'])"/>
        <xf:bind nodeset="/ts:testSuite/ts:specChapter/ts:statusSummary/ts:numNormUnknown"
                 calculate="count(/ts:testSuite/ts:specChapter/ts:testCase[ts:testCaseNormative = 'true'][ts:testCaseStatus = 'Unknown'])"/>

        <xf:bind nodeset="/ts:testSuite/ts:specChapter/ts:statusSummary/ts:numBasicTotal"
                 calculate="count(/ts:testSuite/ts:specChapter/ts:testCase[ts:testCaseBasic = 'true'])"/>
        <xf:bind nodeset="/ts:testSuite/ts:specChapter/ts:statusSummary/ts:numBasicPass"
                 calculate="count(/ts:testSuite/ts:specChapter/ts:testCase[ts:testCaseBasic = 'true'][ts:testCaseStatus = 'Passed'])"/>
        <xf:bind nodeset="/ts:testSuite/ts:specChapter/ts:statusSummary/ts:numBasicFail"
                 calculate="count(/ts:testSuite/ts:specChapter/ts:testCase[ts:testCaseBasic = 'true'][ts:testCaseStatus = 'Failed'])"/>
        <xf:bind nodeset="/ts:testSuite/ts:specChapter/ts:statusSummary/ts:numBasicUnknown"
                 calculate="count(/ts:testSuite/ts:specChapter/ts:testCase[ts:testCaseBasic = 'true'][ts:testCaseStatus = 'Unknown'])"/>


        <!-- bindings for test execution profile settings -->

        <xf:bind
                nodeset="/ts:testSuite/ts:specChapter/ts:testCase[ts:testCaseNormative = 'true'][ts:testCaseBasic = 'true'][ts:testCaseApplicability/ts:XForms1.0 = 'false'][ts:testCaseApplicability/ts:XForms1.1 = 'false']"
                relevant="not(/ts:testSuite/ts:specChapter/ts:profile/ts:specification = 'XForms 1.0') and not(/ts:testSuite/ts:specChapter/ts:profile/ts:specification = 'XForms 1.1')"/>

        <xf:bind
                nodeset="/ts:testSuite/ts:specChapter/ts:testCase[ts:testCaseNormative = 'false'][ts:testCaseBasic = 'true'][ts:testCaseApplicability/ts:XForms1.0 = 'false'][ts:testCaseApplicability/ts:XForms1.1 = 'false']"
                relevant="not(/ts:testSuite/ts:specChapter/ts:profile/ts:normativeOnly = 'true') and not(/ts:testSuite/ts:specChapter/ts:profile/ts:specification = 'XForms 1.0') and not(/ts:testSuite/ts:specChapter/ts:profile/ts:specification = 'XForms 1.1')"/>

        <xf:bind
                nodeset="/ts:testSuite/ts:specChapter/ts:testCase[ts:testCaseNormative = 'true'][ts:testCaseBasic = 'false'][ts:testCaseApplicability/ts:XForms1.0 = 'false'][ts:testCaseApplicability/ts:XForms1.1 = 'false']"
                relevant="/ts:testSuite/ts:specChapter/ts:profile/ts:basicOnly = 'false' and not(/ts:testSuite/ts:specChapter/ts:profile/ts:specification = 'XForms 1.0') and not(/ts:testSuite/ts:specChapter/ts:profile/ts:specification = 'XForms 1.1')"/>

        <xf:bind
                nodeset="/ts:testSuite/ts:specChapter/ts:testCase[ts:testCaseNormative = 'false'][ts:testCaseBasic = 'false'][ts:testCaseApplicability/ts:XForms1.0 = 'false'][ts:testCaseApplicability/ts:XForms1.1 = 'false']"
                relevant="not(/ts:testSuite/ts:specChapter/ts:profile/ts:normativeOnly = 'true') and (/ts:testSuite/ts:specChapter/ts:profile/ts:basicOnly = 'false') and not(/ts:testSuite/ts:specChapter/ts:profile/ts:specification = 'XForms 1.0') and not(/ts:testSuite/ts:specChapter/ts:profile/ts:specification = 'XForms 1.1')"/>

        <xf:bind
                nodeset="/ts:testSuite/ts:specChapter/ts:testCase[ts:testCaseNormative = 'true'][ts:testCaseBasic = 'true'][ts:testCaseApplicability/ts:XForms1.0 = 'true'][ts:testCaseApplicability/ts:XForms1.1 = 'false']"
                relevant="not(/ts:testSuite/ts:specChapter/ts:profile/ts:specification = 'XForms 1.1')"/>

        <xf:bind
                nodeset="/ts:testSuite/ts:specChapter/ts:testCase[ts:testCaseNormative = 'false'][ts:testCaseBasic = 'true'][ts:testCaseApplicability/ts:XForms1.0 = 'true'][ts:testCaseApplicability/ts:XForms1.1 = 'false']"
                relevant="not(/ts:testSuite/ts:specChapter/ts:profile/ts:normativeOnly = 'true') and not(/ts:testSuite/ts:specChapter/ts:profile/ts:specification = 'XForms 1.1')"/>

        <xf:bind
                nodeset="/ts:testSuite/ts:specChapter/ts:testCase[ts:testCaseNormative = 'true'][ts:testCaseBasic = 'false'][ts:testCaseApplicability/ts:XForms1.0 = 'true'][ts:testCaseApplicability/ts:XForms1.1 = 'false']"
                relevant="/ts:testSuite/ts:specChapter/ts:profile/ts:basicOnly = 'false' and not(/ts:testSuite/ts:specChapter/ts:profile/ts:specification = 'XForms 1.1')"/>

        <xf:bind
                nodeset="/ts:testSuite/ts:specChapter/ts:testCase[ts:testCaseNormative = 'false'][ts:testCaseBasic = 'false'][ts:testCaseApplicability/ts:XForms1.0 = 'true'][ts:testCaseApplicability/ts:XForms1.1 = 'false']"
                relevant="not(/ts:testSuite/ts:specChapter/ts:profile/ts:normativeOnly = 'true') and (/ts:testSuite/ts:specChapter/ts:profile/ts:basicOnly = 'false') and not(/ts:testSuite/ts:specChapter/ts:profile/ts:specification = 'XForms 1.1')"/>

        <xf:bind
                nodeset="/ts:testSuite/ts:specChapter/ts:testCase[ts:testCaseNormative = 'true'][ts:testCaseBasic = 'true'][ts:testCaseApplicability/ts:XForms1.0 = 'false'][ts:testCaseApplicability/ts:XForms1.1 = 'true']"
                relevant="not(/ts:testSuite/ts:specChapter/ts:profile/ts:specification = 'XForms 1.0')"/>

        <xf:bind
                nodeset="/ts:testSuite/ts:specChapter/ts:testCase[ts:testCaseNormative = 'false'][ts:testCaseBasic = 'true'][ts:testCaseApplicability/ts:XForms1.0 = 'false'][ts:testCaseApplicability/ts:XForms1.1 = 'true']"
                relevant="not(/ts:testSuite/ts:specChapter/ts:profile/ts:normativeOnly = 'true') and not(/ts:testSuite/ts:specChapter/ts:profile/ts:specification = 'XForms 1.0')"/>

        <xf:bind
                nodeset="/ts:testSuite/ts:specChapter/ts:testCase[ts:testCaseNormative = 'true'][ts:testCaseBasic = 'false'][ts:testCaseApplicability/ts:XForms1.0 = 'false'][ts:testCaseApplicability/ts:XForms1.1 = 'true']"
                relevant="/ts:testSuite/ts:specChapter/ts:profile/ts:basicOnly = 'false' and not(/ts:testSuite/ts:specChapter/ts:profile/ts:specification = 'XForms 1.0')"/>

        <xf:bind
                nodeset="/ts:testSuite/ts:specChapter/ts:testCase[ts:testCaseNormative = 'false'][ts:testCaseBasic = 'false'][ts:testCaseApplicability/ts:XForms1.0 = 'false'][ts:testCaseApplicability/ts:XForms1.1 = 'true']"
                relevant="not(/ts:testSuite/ts:specChapter/ts:profile/ts:normativeOnly = 'true') and (/ts:testSuite/ts:specChapter/ts:profile/ts:basicOnly = 'false') and not(/ts:testSuite/ts:specChapter/ts:profile/ts:specification = 'XForms 1.0')"/>

        <xf:bind
                nodeset="/ts:testSuite/ts:specChapter/ts:testCase[ts:testCaseNormative = 'true'][ts:testCaseBasic = 'true'][ts:testCaseApplicability/ts:XForms1.0 = 'true'][ts:testCaseApplicability/ts:XForms1.1 = 'true']"
                relevant="true()"/>

        <xf:bind
                nodeset="/ts:testSuite/ts:specChapter/ts:testCase[ts:testCaseNormative = 'false'][ts:testCaseBasic = 'true'][ts:testCaseApplicability/ts:XForms1.0 = 'true'][ts:testCaseApplicability/ts:XForms1.1 = 'true']"
                relevant="not(/ts:testSuite/ts:specChapter/ts:profile/ts:normativeOnly = 'true')"/>

        <xf:bind
                nodeset="/ts:testSuite/ts:specChapter/ts:testCase[ts:testCaseNormative = 'true'][ts:testCaseBasic = 'false'][ts:testCaseApplicability/ts:XForms1.0 = 'true'][ts:testCaseApplicability/ts:XForms1.1 = 'true']"
                relevant="/ts:testSuite/ts:specChapter/ts:profile/ts:basicOnly = 'false'"/>

        <xf:bind
                nodeset="/ts:testSuite/ts:specChapter/ts:testCase[ts:testCaseNormative = 'false'][ts:testCaseBasic = 'false'][ts:testCaseApplicability/ts:XForms1.0 = 'true'][ts:testCaseApplicability/ts:XForms1.1 = 'true']"
                relevant="not(/ts:testSuite/ts:specChapter/ts:profile/ts:normativeOnly = 'true') and (/ts:testSuite/ts:specChapter/ts:profile/ts:basicOnly = 'false')"/>

        <xf:submission id="submit_chapterModel"
                       action="{$webapp.realpath}../../../src/test/resources/XFormsTestSuite1.1E1/Edition1/driverPages/Results/useragents/{instance('i-controller')/selectedChapter/@result}-{instance('i-controller')/selectedConfig}.xml"
                       method="put"
                       replace="none"
                       ref="instance('instance_chapterModel')">
            <xf:message ev:event="xforms-submit-error">Error saving Results in SVN Directory</xf:message>
            <xf:send ev:event="xforms-submit-done" submission="s-save-in-webapp"/>

        </xf:submission>
        <xf:submission id="s-save-in-webapp"
                       action="{$webapp.realpath}/forms/XFormsTestSuite1.1E1/Edition1/driverPages/Results/useragents/{instance('i-controller')/selectedChapter/@result}-{instance('i-controller')/selectedConfig}.xml"
                       method="put"
                       replace="none"
                       ref="instance('instance_chapterModel')">
            <xf:message ev:event="xforms-submit-error">Error saving Results in Webapp Directory</xf:message>
            <xf:message ev:event="xforms-submit-done" level="ephemeral">Saved </xf:message>

        </xf:submission>


        <xf:submission id="load_chapterModel"
                       action="{$webapp.realpath}../../../src/test/resources/XFormsTestSuite1.1E1/Edition1/driverPages/Results/useragents/{instance('i-controller')/selectedChapter/@result}-{instance('i-controller')/selectedConfig}.xml"
                       method="get"
                       replace="instance"
                       validate="false">
            <xf:message ev:event="xforms-submit-error">Error loading Chapter data</xf:message>
            <xf:setvalue ev:event="xforms-submit-done" ref="/ts:testSuite/ts:specChapter/@productId" value="concat(instance('i-controller')/product-id, '_', instance('i-controller')/selectedConfig)"/>
        </xf:submission>
        <xf:submission id="load-empty"
                       action="{$webapp.realpath}../../../src/test/resources/XFormsTestSuite1.1E1/Edition1/driverPages/Results/XF11_Empty_Results.xml"
                       method="get"
                       replace="instance"
                       validate="false"/>
        <!--<xf:submission id="load_chapterModel"-->
        <!--action="../Results/XF11_01_Results.xml"-->
        <!--method="get"-->
        <!--replace="instance" />-->

        <xf:submission id="clear_chapterModel"
                       action="../xml/{instance('i-controller')/selectedChapter/@clear}.xml"
                       method="get"
                       replace="instance"/>

        <xf:instance id="i-controller" src="{$webapp.realpath}../../../src/test/resources/XFormsTestSuite1.1E1/Edition1/driverPages/Results/test-config.xml"/>
        <xf:bind nodeset="instance('i-controller')/showResults" relevant="boolean-from-string(.)" calculate="count(instance('instance_chapterModel')//ts:testCase) &gt; 2" />
    </xf:model>

    <link href="ChibaTestSuite11.css" rel="stylesheet"/>
</head>
<body class="tundra" style="overflow:hidden;">

<h1>XForms 1.1 Test Suite</h1>

<xf:group>
    <table id="testchooser">
        <tr>
            <td>Selected Config</td>
            <td>Chapter</td>
            <td>Product/Build Note</td>
            <td></td>
        </tr>
        <tr>
            <td>
                <xf:select1 ref="instance('i-controller')/selectedConfig" appearance="minimal" incremental="true">
                    <xf:label/>
                    <xf:itemset nodeset="instance('i-controller')/configs/config">
                        <xf:label ref="."/>
                        <xf:value ref="@path"/>
                        <xf:action ev:event="xforms-select" if="not(instance('i-controller')/selectedChapter = 'Empty')">
                            <xf:recalculate/>
                            <xf:send submission="load_chapterModel" />
                        </xf:action>
                    </xf:itemset>
                </xf:select1>
            </td>
            <td>
                <xf:select1 ref="instance('i-controller')/selectedChapter" appearance="minimal" incremental="true">
                    <xf:label/>
                    <xf:choices>
                        <xf:item>
                            <xf:label/>
                            <xf:value>Empty</xf:value>
                            <xf:action ev:event="xforms-select">
                                <xf:recalculate/>
                                <xf:send submission="load-empty"/>
                            </xf:action>
                        </xf:item>
                        <xf:item>
                            <xf:label>Chapter 1</xf:label>
                            <xf:value>Chapter1</xf:value>
                            <xf:action ev:event="xforms-select">
                                <xf:setvalue ref="@result">XF11_01_Results</xf:setvalue>
                                <xf:setvalue ref="@clear">XF11TestSuiteChpt1</xf:setvalue>
                                <xf:send submission="load_chapterModel"/>
                            </xf:action>
                        </xf:item>
                        <xf:item>
                            <xf:label>Chapter 2</xf:label>
                            <xf:value>Chapter2</xf:value>
                            <xf:action ev:event="xforms-select">
                                <xf:setvalue ref="@result">XF11_02_Results</xf:setvalue>
                                <xf:setvalue ref="@clear">XF11TestSuiteChpt2</xf:setvalue>
                                <xf:send submission="load_chapterModel"/>
                            </xf:action>
                        </xf:item>
                        <xf:item>
                            <xf:label>Chapter 3</xf:label>
                            <xf:value>Chapter3</xf:value>
                            <xf:action ev:event="xforms-select">
                                <xf:setvalue ref="@result">XF11_03_Results</xf:setvalue>
                                <xf:setvalue ref="@clear">XF11TestSuiteChpt3</xf:setvalue>
                                <xf:send submission="load_chapterModel"/>
                            </xf:action>

                        </xf:item>
                        <xf:item>
                            <xf:label>Chapter 4</xf:label>
                            <xf:value>Chapter4</xf:value>
                            <xf:action ev:event="xforms-select">
                                <xf:setvalue ref="@result">XF11_04_Results</xf:setvalue>
                                <xf:setvalue ref="@clear">XF11TestSuiteChpt4</xf:setvalue>
                                <xf:send submission="load_chapterModel"/>
                            </xf:action>
                        </xf:item>
                        <xf:item>
                            <xf:label>Chapter 5</xf:label>
                            <xf:value>Chapter5</xf:value>
                            <xf:action ev:event="xforms-select">
                                <xf:setvalue ref="@result">XF11_05_Results</xf:setvalue>
                                <xf:setvalue ref="@clear">XF11TestSuiteChpt5</xf:setvalue>
                                <xf:send submission="load_chapterModel"/>
                            </xf:action>
                        </xf:item>
                        <xf:item>
                            <xf:label>Chapter 6</xf:label>
                            <xf:value>Chapter6</xf:value>
                            <xf:action ev:event="xforms-select">
                                <xf:setvalue ref="@result">XF11_06_Results</xf:setvalue>
                                <xf:setvalue ref="@clear">XF11TestSuiteChpt6</xf:setvalue>
                                <xf:send submission="load_chapterModel"/>
                            </xf:action>
                        </xf:item>
                        <xf:item>
                            <xf:label>Chapter 7</xf:label>
                            <xf:value>Chapter7</xf:value>
                            <xf:action ev:event="xforms-select">
                                <xf:setvalue ref="@result">XF11_07_Results</xf:setvalue>
                                <xf:setvalue ref="@clear">XF11TestSuiteChpt7</xf:setvalue>
                                <xf:send submission="load_chapterModel"/>
                            </xf:action>
                        </xf:item>
                        <xf:item>
                            <xf:label>Chapter 8</xf:label>
                            <xf:value>Chapter8</xf:value>
                            <xf:action ev:event="xforms-select">
                                <xf:setvalue ref="@result">XF11_08_Results</xf:setvalue>
                                <xf:setvalue ref="@clear">XF11TestSuiteChpt8</xf:setvalue>
                                <xf:send submission="load_chapterModel"/>
                            </xf:action>
                        </xf:item>
                        <xf:item>
                            <xf:label>Chapter 9</xf:label>
                            <xf:value>Chapter9</xf:value>
                            <xf:action ev:event="xforms-select">
                                <xf:setvalue ref="@result">XF11_09_Results</xf:setvalue>
                                <xf:setvalue ref="@clear">XF11TestSuiteChpt9</xf:setvalue>
                                <xf:send submission="load_chapterModel"/>
                            </xf:action>
                        </xf:item>
                        <xf:item>
                            <xf:label>Chapter 10</xf:label>
                            <xf:value>Chapter10</xf:value>
                            <xf:action ev:event="xforms-select">
                                <xf:setvalue ref="@result">XF11_10_Results</xf:setvalue>
                                <xf:setvalue ref="@clear">XF11TestSuiteChpt10</xf:setvalue>
                                <xf:send submission="load_chapterModel"/>
                            </xf:action>
                        </xf:item>
                        <xf:item>
                            <xf:label>Chapter 11</xf:label>
                            <xf:value>Chapter11</xf:value>
                            <xf:action ev:event="xforms-select">
                                <xf:setvalue ref="@result">XF11_11_Results</xf:setvalue>
                                <xf:setvalue ref="@clear">XF11TestSuiteChpt11</xf:setvalue>
                                <xf:send submission="load_chapterModel"/>
                            </xf:action>
                        </xf:item>
                        <xf:item>
                            <xf:label>Appendix B</xf:label>
                            <xf:value>AppendixB</xf:value>
                            <xf:action ev:event="xforms-select">
                                <xf:setvalue ref="@result">XF11_AppendixB_Results</xf:setvalue>
                                <xf:setvalue ref="@clear">XF11TestSuiteAppxB</xf:setvalue>
                                <xf:send submission="load_chapterModel"/>
                            </xf:action>
                        </xf:item>
                        <xf:item>
                            <xf:label>Appendix G</xf:label>
                            <xf:value>AppendixG</xf:value>
                            <xf:action ev:event="xforms-select">
                                <xf:setvalue ref="@result">XF11_AppendixG_Results</xf:setvalue>
                                <xf:setvalue ref="@clear">XF11TestSuiteAppxG</xf:setvalue>
                                <xf:send submission="load_chapterModel"/>
                            </xf:action>
                        </xf:item>
                        <xf:item>
                            <xf:label>Appendix H</xf:label>
                            <xf:value>AppendixH</xf:value>
                            <xf:action ev:event="xforms-select">
                                <xf:setvalue ref="@result">XF11_AppendixH_Results</xf:setvalue>
                                <xf:setvalue ref="@clear">XF11TestSuiteAppxH</xf:setvalue>
                                <xf:send submission="load_chapterModel"/>
                            </xf:action>
                        </xf:item>
                    </xf:choices>
                </xf:select1>
            </td>
            <td>
                <xf:input ref="instance('i-controller')/product-id" class="testCaseSummaryTitle">
                    <xf:label/>
                </xf:input>
            </td>
            <td>
                <xf:trigger id="reportBug">
                    <xf:label>Report a Bug</xf:label>
                    <xf:load resource="https://chiba-project.org/trac/newticket" show="new"/>

                    <!--
                    <xf:load resource="https://chiba-project.org/trac/newticket?summary=Repeat%20Test%20Bug&amp;description=Please%20describe%20the%20bug%20you%20experienced%20here.%20Don%27t%20forget%20to%20note%20which%20steps%20brought%20up%20the%20error" show="new"/>
    -->
                </xf:trigger>
            </td>

        </tr>
</table>
</xf:group>

<xf:group appearance="minimal">

    <xf:output ref="ts:specChapter/@chapterName" class="header">
        <xf:label/>
    </xf:output>
    <xf:output ref="ts:specChapter/@chapterTitle" class="header">
        <xf:label/>
    </xf:output>


<!--<div class="header">Targets</div>-->

<!--<table>
    <tr>
        <td>Basic Only:</td>
        <td>
            <xf:input ref="/ts:testSuite/ts:specChapter/ts:profile/ts:basicOnly" appearance="compact">
                <xf:label/>
            </xf:input>
        </td>
    </tr>
    <tr>
        <td>Normative Only:</td>
        <td>
            <xf:input ref="/ts:testSuite/ts:specChapter/ts:profile/ts:normativeOnly" appearance="compact">
                <xf:label/>
            </xf:input>
        </td>
    </tr>
</table>-->


<xf:group appearance="minimal" ref="instance('i-controller')/showResults">
    <xf:label><span style="font-weight:bold;">Results</span></xf:label>

    <table id="resultoverview" cellspacing="0px" cellpadding="0px" border="0">
        <tr class="tableheader">
            <td/>
            <td>Passed</td>
            <td>Failed</td>
            <td>Total</td>
            <td></td>
        </tr>
        <tr>
            <td class="testCaseSummaryTitle">Normative</td>
            <td class="passed">
                <xf:output id="normPass" model="chapterModel" ref="instance()/ts:specChapter/ts:statusSummary/ts:numNormPass">
                </xf:output>
            </td>
            <td class="failed">
                <xf:output id="normFail" model="chapterModel" ref="instance()/ts:specChapter/ts:statusSummary/ts:numNormFail"/>
            </td>
            <td class="total">
                <xf:output id="normUnknown" model="chapterModel" ref="instance()/ts:specChapter/ts:statusSummary/ts:numNormTotal"/>
            </td>
        </tr>
        <tr>
            <td class="testCaseSummaryTitle">Basic</td>
            <td class="passed">
                <xf:output model="chapterModel" ref="instance()/ts:specChapter/ts:statusSummary/ts:numBasicPass"/>
            </td>
            <td class="failed">
                <xf:output model="chapterModel" ref="instance()/ts:specChapter/ts:statusSummary/ts:numBasicFail"/>
            </td>
            <td class="total">
                <xf:output model="chapterModel" ref="instance()/ts:specChapter/ts:statusSummary/ts:numBasicTotal"/>
            </td>
            <!--<td>
                <script type="text/javascript">
                    var pass = dojo.byId("normPass-value").innerHTML;
                    var fail = dojo.byId("normFail-value").innerHTML;
                    var unknown = dojo.byId("normUnknown-value").innerHTML;
                    alert(pass + ":" + fail  + ":" + unknown);
                    var seriesData = [
                        {y: 4,  color: "red"},
                        {y: 4,  color: "green"},
                        {y: 1,  color: "blue"},
                    ];
                </script>
                <div id="simplechart2" style="width: 150px; height: 150px;"></div>
            </td>-->                     
        </tr>
    </table>
</xf:group>

<div class="header">Test Cases</div>
    <xf:repeat id="testsuiteTable" nodeset="/ts:testSuite/ts:specChapter/ts:testCase"
               appearance="compact">    <!-- testCase -->
        <xf:output id="testCaseName" appearance="caLink" class="testCaseName" ref="ts:testCaseLink">
            <xf:label ref="../ts:testCaseName" header="Test Case"/>
        </xf:output>

        <xf:output ref="ts:testCaseDescription" model="chapterModel" class="testCaseDescription">
            <xf:label>Description</xf:label>
        </xf:output>

        <!--
                <xf:input appearance="minimal" ref="ts:testCaseApplicability/ts:XForms1.0" model="chapterModel" class="testCaseBasic">
                    <xf:label></xf:label>
                </xf:input>

                <xf:output appearance="minimal" ref="ts:testCaseApplicability/ts:XForms1.1" model="chapterModel" class="testCaseBasic">
                    <xf:label></xf:label>
                </xf:output>
        -->
        <xf:output appearance="caLink" ref="ts:testCaseSpecLink">
            <xf:label ref="../ts:testCaseSpecLinkName" header="Spec Link"/>
        </xf:output>


        <xf:output appearance="minimal" ref="ts:testCaseBasic" model="chapterModel" class="testCaseBasic">
            <xf:label>Normative Basic</xf:label>
        </xf:output>

        <xf:output appearance="minimal" ref="ts:testCaseNormative" model="chapterModel" class="testCaseNormative">
            <xf:label>Normative Full</xf:label>
        </xf:output>


        <xf:select1 ref="ts:testCaseStatus" model="chapterModel" class="testCaseStatus" incremental="true">
            <xf:label>Status</xf:label>
            <xf:item>
                <xf:label>Passed</xf:label>
                <xf:value>Passed</xf:value>
            </xf:item>
            <xf:item>
                <xf:label>Failed</xf:label>
                <xf:value>Failed</xf:value>
            </xf:item>
            <xf:item>
                <xf:label>Unknown</xf:label>
                <xf:value>Unknown</xf:value>
            </xf:item>
            <xf:hint>Select test case status of Passed, Failed, or Unknown.</xf:hint>
            <xf:setvalue ref="../ts:testCaseDate" value="substring(local-date(),1,10)" ev:event="xforms-value-changed"/>
        </xf:select1>

        <xf:input ref="ts:testCaseDate" model="chapterModel" class="testCaseDate">
            <xf:label>Date</xf:label>
            <xf:hint>Date the current status was established.</xf:hint>
        </xf:input>

        <xf:input id="ticketId" ref="ts:testCaseNote" model="chapterModel" class="testCaseNote">
            <xf:label>Note</xf:label>
        </xf:input>


        <xf:output appearance="caLink"
                   value="IF(substring(ts:testCaseNote,1,1) = '#',concat('https://chiba-project.org/trac/ticket/',substring(ts:testCaseNote,2,string-length(ts:testCaseNote))),'')">
            <xf:label></xf:label>
        </xf:output>
    </xf:repeat>

<!-- testCase -->
<div></div>

<!--<xf:group>
  <xf:label>Test Status:</xf:label>
</xf:group>-->

    <xf:group>
        <xf:label/>
        <xf:submit submission="submit_chapterModel">
            <xf:label>Save</xf:label>
        </xf:submit>
        <!--<xf:submit submission="load_chapterModel">
            <xf:label>Load</xf:label>
        </xf:submit>-->
        <xf:submit submission="clear_chapterModel">
            <xf:label>Clear</xf:label>
        </xf:submit>

    </xf:group>
<!-- DEBUG Section -->
<!--

    <xf:group>
            <xf:label>Debug</xf:label>

            <xf:output ref="instance('i-controller')/selectedOS/@name">
                <xf:label>OS Name:</xf:label>
            </xf:output>
            <br/>
            <xf:output ref="instance('i-controller')/selectedOS/@version">
                <xf:label>OS Version:</xf:label>
            </xf:output>
            <br/>
            <xf:output ref="instance('i-controller')/selectedBrowser/@name">
                <xf:label>Browser Name:</xf:label>
            </xf:output>
            <br/>
            <xf:output ref="instance('i-controller')/selectedBrowser/@version">
                <xf:label>Browser Version:</xf:label>
            </xf:output>
            <br/>
            <xf:output value="IF((contains(bf:appContext('http-headers/user-agent'),'Firefox') or contains(bf:appContext('http-headers/user-agent'),'Minefield')) and contains(bf:appContext('http-headers/user-agent'),'/3.0'), 'Browser is Firefox 3.0','Browser is not Firefox 3.0')">
                <xf:label>Header Browser:</xf:label>
            </xf:output><br/>
            <xf:output value="IF((contains(bf:appContext('http-headers/user-agent'),'Firefox') or contains(bf:appContext('http-headers/user-agent'),'Shiretoko')) and contains(bf:appContext('http-headers/user-agent'),'/3.1'), 'Browser is Firefox 3.1','Browser is not Firefox 3.1')">
                <xf:label>Header Browser:</xf:label>
            </xf:output><br/>
            <xf:output value="IF((contains(bf:appContext('http-headers/user-agent'),'MSIE') and not(contains(bf:appContext('http-headers/user-agent'),'Opera')) and not(contains(bf:appContext('http-headers/user-agent'),'Safari'))) and contains(bf:appContext('http-headers/user-agent'),'MSIE 6.0'), 'Browser is IE 6.0','Browser is not IE 6.0')">
                <xf:label>Header Browser:</xf:label>
            </xf:output><br/>
            <xf:output value="IF((contains(bf:appContext('http-headers/user-agent'),'MSIE') and not(contains(bf:appContext('http-headers/user-agent'),'Opera')) and not(contains(bf:appContext('http-headers/user-agent'),'Safari'))) and contains(bf:appContext('http-headers/user-agent'),'MSIE 7.0'), 'Browser is IE 7.0','Browser is not IE 7.0')">
                <xf:label>Header Browser:</xf:label>
            </xf:output><br/>
            <xf:output value="IF((contains(bf:appContext('http-headers/user-agent'),'MSIE') and not(contains(bf:appContext('http-headers/user-agent'),'Opera')) and not(contains(bf:appContext('http-headers/user-agent'),'Safari'))) and contains(bf:appContext('http-headers/user-agent'),'MSIE 8.0'), 'Browser is IE 8.0','Browser is not IE 8.0')">
                <xf:label>Header Browser:</xf:label>
            </xf:output><br/>
            <xf:output value="IF((contains(bf:appContext('http-headers/user-agent'),'AppleWebKit') and not(contains(bf:appContext('http-headers/user-agent'),'Chrome'))) and contains(bf:appContext('http-headers/user-agent'),'AppleWebKit/5'), 'Browser is Safari 3.2','Browser is not Safari 3.2')">
                <xf:label>Header Browser:</xf:label>
            </xf:output><br/>
            <xf:output value="IF(contains(bf:appContext('http-headers/user-agent'),'Macintosh'), 'OS is Macintosh','OS is not Macintosh')">
                <xf:label>Header OS:</xf:label>
            </xf:output><br/>
            <xf:output value="IF(contains(bf:appContext('http-headers/user-agent'),'Windows'), 'OS is Windows','OS is not Windows')">
                <xf:label>Header OS:</xf:label>
            </xf:output><br/>
            <xf:output value="IF(contains(bf:appContext('http-headers/user-agent'),'Linux'), 'OS is Linux','OS is not Linux')">
                <xf:label>Header OS:</xf:label>
            </xf:output><br/>
            <br/>
            <xf:output value="concat(   bf:appContext('webapp.realpath'),
                                        '../../../src/test/resources/XFormsTestSuite1.1E1/Edition1/driverPages/Results/web/',
                                        instance('i-controller')/selectedOS/@name,
                                        '/',
                                        instance('i-controller')/selectedOS/@version,
                                        '/',
                                        instance('i-controller')/selectedBrowser/@name,
                                        '/',
                                        instance('i-controller')/selectedBrowser/@version,
                                        '/',
                                        instance('i-controller')/selectedChapter/@result,
                                        '.xml'
                                    )">
                <xf:label>Load URI</xf:label>
            </xf:output>
        </xf:group>
        -->
</xf:group>
</body>
</html>
